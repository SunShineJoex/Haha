1 多线程
1.1 为什么多线程同时访问（读写）同个变量，会有并发问题？
    1 Java 内存模型规定了所有的变量都存储在主内存中，每条线程有自己的工作内存。
    2 线程的工作内存中保存了该线程中用到的变量的主内存副本拷贝，线程对变量的所有操作都必须在工作内存中进行，而不能直接读写主内存。
    3 线程访问一个变量，首先将变量从主内存拷贝到工作内存，对变量的写操作，不会马上同步到主内存。
    4 不同的线程之间也无法直接访问对方工作内存中的变量，线程间变量的传递均需要自己的工作内存和主存之间进行数据同步进行。
1.2 并发三要素
    1 原子性：在一个操作中，CPU 不可以在中途暂停然后再调度，即不被中断操作，要么执行完成，要么就不执行。
    2 可见性：多个线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看得到修改的值。
    3 有序性：程序执行的顺序按照代码的先后顺序执行。
